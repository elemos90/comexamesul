-- ============================================
-- FIX COMPLETO - Resolver "Erro Interno"
-- Execute este script no phpMyAdmin
-- ============================================

SELECT 'üîß INICIANDO CORRE√á√ïES...' AS '';

-- ============================================
-- 1. ADICIONAR COLUNA experiencia_supervisao
-- ============================================

SELECT '1Ô∏è‚É£ Verificando coluna experiencia_supervisao...' AS '';

SET @column_exists = (
    SELECT COUNT(*)
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = DATABASE()
      AND TABLE_NAME = 'users'
      AND COLUMN_NAME = 'experiencia_supervisao'
);

SET @sql = IF(
    @column_exists = 0,
    'ALTER TABLE users ADD COLUMN experiencia_supervisao INT DEFAULT 0 COMMENT ''Experi√™ncia em supervis√£o (0-10)''',
    'SELECT ''‚úÖ Coluna experiencia_supervisao j√° existe'' AS info'
);

PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Popular com valores de exemplo
UPDATE users 
SET experiencia_supervisao = FLOOR(RAND() * 10) 
WHERE role IN ('coordenador', 'membro', 'docente')
  AND (experiencia_supervisao IS NULL OR experiencia_supervisao = 0);

SELECT '‚úÖ Coluna experiencia_supervisao OK' AS '';

-- ============================================
-- 2. VERIFICAR COLUNAS OBRIGAT√ìRIAS
-- ============================================

SELECT '2Ô∏è‚É£ Verificando colunas obrigat√≥rias...' AS '';

-- Verificar campus
SET @campus_exists = (
    SELECT COUNT(*)
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = DATABASE()
      AND TABLE_NAME = 'users'
      AND COLUMN_NAME = 'campus'
);

SET @sql = IF(
    @campus_exists = 0,
    'ALTER TABLE users ADD COLUMN campus VARCHAR(100) DEFAULT ''Campus Central''',
    'SELECT ''‚úÖ Coluna campus existe'' AS info'
);

PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Verificar available_for_vigilance
SET @avail_exists = (
    SELECT COUNT(*)
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = DATABASE()
      AND TABLE_NAME = 'users'
      AND COLUMN_NAME = 'available_for_vigilance'
);

SET @sql = IF(
    @avail_exists = 0,
    'ALTER TABLE users ADD COLUMN available_for_vigilance TINYINT(1) DEFAULT 1',
    'SELECT ''‚úÖ Coluna available_for_vigilance existe'' AS info'
);

PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SELECT '‚úÖ Colunas obrigat√≥rias OK' AS '';

-- ============================================
-- 3. POPULAR CAMPOS VAZIOS
-- ============================================

SELECT '3Ô∏è‚É£ Populando campos vazios...' AS '';

UPDATE users 
SET campus = 'Campus Central' 
WHERE (campus IS NULL OR campus = '')
  AND role IN ('coordenador', 'membro', 'docente');

SELECT '‚úÖ Campos populados' AS '';

-- ============================================
-- 4. ATIVAR TODOS OS DOCENTES
-- ============================================

SELECT '4Ô∏è‚É£ Ativando docentes...' AS '';

UPDATE users 
SET 
    active = 1,
    available_for_vigilance = 1
WHERE role IN ('coordenador', 'membro', 'docente');

SELECT CONCAT('‚úÖ ', ROW_COUNT(), ' docentes ativados') AS '';

-- ============================================
-- 5. VERIFICAR JANELAS TEMPORAIS EM JURIES
-- ============================================

SELECT '5Ô∏è‚É£ Verificando janelas temporais...' AS '';

SELECT 
    COUNT(*) AS total_juris,
    SUM(CASE WHEN inicio IS NULL OR fim IS NULL THEN 1 ELSE 0 END) AS sem_janelas
FROM juries;

-- ============================================
-- 6. RELAT√ìRIO FINAL
-- ============================================

SELECT 'üìä RELAT√ìRIO FINAL' AS '';

SELECT 
    '‚úì Estrutura' AS categoria,
    CONCAT(
        'campus: ', IF(@campus_exists, 'SIM', 'ADICIONADO'), ', ',
        'available_for_vigilance: ', IF(@avail_exists, 'SIM', 'ADICIONADO'), ', ',
        'experiencia_supervisao: ', IF(@column_exists, 'SIM', 'ADICIONADO')
    ) AS detalhes;

SELECT 
    '‚úì Docentes' AS categoria,
    CONCAT(
        'Total: ', COUNT(*), ', ',
        'Ativos: ', SUM(active = 1), ', ',
        'Dispon√≠veis: ', SUM(available_for_vigilance = 1), ', ',
        'Eleg√≠veis: ', SUM(active = 1 AND available_for_vigilance = 1)
    ) AS detalhes
FROM users
WHERE role IN ('coordenador', 'membro', 'docente');

SELECT 
    '‚úì J√∫ris' AS categoria,
    CONCAT(
        'Total: ', COUNT(*), ', ',
        'Com janelas: ', SUM(CASE WHEN inicio IS NOT NULL AND fim IS NOT NULL THEN 1 ELSE 0 END)
    ) AS detalhes
FROM juries;

-- ============================================
-- 7. DIAGN√ìSTICO FINAL
-- ============================================

SELECT 'üéØ DIAGN√ìSTICO FINAL' AS '';

SELECT 
    CASE 
        WHEN (SELECT COUNT(*) FROM users WHERE active=1 AND available_for_vigilance=1 AND role IN ('coordenador', 'membro', 'docente')) < 3
        THEN '‚ö†Ô∏è ATEN√á√ÉO: Menos de 3 docentes eleg√≠veis. Execute UPDATE acima.'
        WHEN (SELECT COUNT(*) FROM juries WHERE inicio IS NULL OR fim IS NULL) > 0
        THEN '‚ö†Ô∏è ATEN√á√ÉO: Alguns j√∫ris sem janelas temporais. Execute migrations.'
        ELSE '‚úÖ TUDO OK! Sistema Top-3 pronto para uso!'
    END AS status;

SELECT '‚úÖ CORRE√á√ïES CONCLU√çDAS!' AS '';
SELECT 'Teste agora em: http://localhost/juries/planning' AS proxima_acao;
